{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;ADOA,IAAA,IAAA;ACLA,ADKA,ICLM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS;AAAC,ADKvB,ECLuB,IAAI,EAAE,IDK7B,ECLsB;AAAe,ADQnC,ECRmC,GAAG,EAAE,IDQxC,IAAA,CAAoB,IAApB,EAAmC;ACRf,ADQA,CCRT,CAAb,ODQsB,IAAA,GAAA,IAAA;ACNtB,ADIE,ICJE,CAAC,GAAL,CAAS,ADIP,MAAA,GAAoC,EAApC;ACJS,ADM8B,ECN9B,GAAG,EAAE;AAAP,CAAT;AAEA,ADME,EAAA,ECNE,CAAC,CDMH,CCNF,ADME,CCNM,QAAR,ADME,CAAA,CCNgB,EDMhB,GAAA,OCNgB,GDMZ,QAAJ,EAAmB;ACNG,ADOpB,SCPoB,EDOb,KCPoB,ADOf,CCPgB,GAAR,ADOb,CCPyB,ADOf,ICPG,CAAA,GDOb,CAAP;ACPqC,ADQtC,CCRH,EDME;ACLF,IAAI,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;AAAM,ADStB,EAAA,IAAA,CAAA,ECTsB,OAAO,ADS7B,CCT8B,ADS9B,GCTsB,ADStB,CCTkC,EDSlC,KCTsB,CAAA,IDSlB,SAAJ,EAAwB;ACTkB,ADUxC,CCVJ,GDUI,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,SAAzB;ACTJ,ADUG,GAFD,CCRE,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;AAAM,SAAA,OAAO,CAAC,GAAR,CAAY,oBAAZ,CAAA;AAAiC,ADYvD,CCZF,CDYE,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAwC;ACV1C,ADWI,ICXA,CAAC,GDWK,ICXV,CAAa,QAAb,ADWuB,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAAhD;ACVJ,ADWI,ICXA,ADWA,CCXC,OAAL,CAAa,IDWI,CAAC,GCXlB,CDWI,CAAmB,CCTvB,ODSI;AACA,SAAK,MAAL,CAAY,SAAZ,IAAyB,aAAzB;AACD,GAJD;;AAMA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACvB,QAAI,CAAC,KAAK,MAAL,CAAY,SAAZ,CAAD,IAA2B,KAAK,MAAL,CAAY,SAAZ,EAAuB,MAAvB,KAAkC,CAAjE,EAAoE;AAClE;AACD;;AAED,SAAK,MAAL,CAAY,SAAZ,EAAuB,OAAvB,CAA+B,UAAA,QAAA,EAAQ;AACrC,MAAA,QAAQ;AACT,KAFD;AAGD,GARD;;AASF,SAAA,IAAA;AA5BA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\n  name?: string;\n  age?: number;\n}\n\ntype Callback = () => void;\n\nexport class User {\n  events: {[key:string]:Callback[]} = {};\n\n  constructor(private data: UserProps) {}\n\n  get(propName:string): UserProps {\n    return this.data[propName];\n  }\n\n  set(userProps: UserProps): void {\n    Object.assign(this.data, userProps);\n  }\n\n  on(eventName: string, callback: Callback): void {\n    const eventHandlers = this.events[eventName] || [];\n    eventHandlers.push(callback);\n    this.events[eventName] = eventHandlers;\n  }\n\n  trigger(eventName: string): void {\n    if (!this.events[eventName] || this.events[eventName].length === 0) {\n      return;\n    }\n\n    this.events[eventName].forEach(callback => {\n      callback();\n    })\n  }\n}","import { User } from './models/User';\n\nconst polo = new User({name: 'Polo', age: 33});\n\npolo.set({ age: 55 });\n\npolo.on(\"change\", () => console.log('yo'));\npolo.on(\"change\", () => console.log('yo yo'));\npolo.on('hungry', () => console.log('Got to eat man...!'))\n\npolo.trigger('change');\npolo.trigger('hungry');\n\n// console.log(polo);"]}